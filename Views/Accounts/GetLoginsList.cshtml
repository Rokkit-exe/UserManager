@model IEnumerable<UsersManager.Models.Login>
@{
    int currentDay = 0;
    var loggedUsersId = (List<int>)ViewBag.LoggedUsersId;

    foreach (var login in Model)
    {
        if (login.LoginDate.Day != currentDay)
        {
            currentDay = login.LoginDate.Day; ///  /DeleteJournalDay?day=2022-03-24 DateTime dayToDelete = DateTime.Parse(day)
            string deleteAction = "DeleteJournalDay" + "?day=" + login.LoginDate.ToShortDateString().Trim();
            <hr />
            <div style="display:grid; grid-template-columns:80px 30px">
                @login.LoginDate.ToShortDateString()
                @Helper.GlyphiconConfirmAction(deleteAction, "glyphicon-remove-circle", "Effacer la journée du " + login.LoginDate.ToShortDateString())
            </div>
            <hr />
        }
        <div style="display: grid; grid-template-columns: 250px 40px 60px ">
            <div style="margin-top:2px;">
                @Helper.AvatarUser(login.User)
            </div>
            <div style="margin-top:2px;">
                @login.LoginDate.ToShortTimeString()
            </div>

            @if (login.LoginDate != login.LogoutDate)
            {
                <div style="margin-top:2px;">&nbsp;:&nbsp;@login.LogoutDate.ToShortTimeString()</div>
            }
            else
            {
                if (loggedUsersId.Contains(login.User.Id))
                {
                    loggedUsersId.Remove(login.User.Id);
                    <div title="Est en ligne en ce moment">&nbsp;:&nbsp; @Helper.OnLineStatusIcon(true, false)</div>
                }
                else
                {
                    <div title="Session expirée">&nbsp;:&nbsp; @Helper.TimeOutIcon()</div>
                }
            }
        </div>
    }
}
